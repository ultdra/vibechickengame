{"version":3,"file":"Group.js","sources":["../src/Group.ts"],"sourcesContent":["import { utils } from '@pixi/core';\n\nimport type { DisplayObject } from '@pixi/display';\nimport type { Layer } from './Layer';\nimport type { Stage } from './Stage';\n\n/**\n * A context for z-ordering {@link PIXI.DisplayObject}s within the same {@link Layer}.\n * @memberof PIXI.layers\n */\nexport class Group extends utils.EventEmitter\n{\n    static _layerUpdateId = 0;\n\n    /** See {@link Layer#useRenderTexture} */\n    public useRenderTexture = false;\n\n    /** See {@link Layer#useDoubleBuffer} */\n    public useDoubleBuffer = false;\n\n    /**\n     * Groups with a non-zero sort priority are sorted first.\n     *\n     * Unsure of the exact purpose yet :)\n     */\n    public sortPriority = 0;\n\n    /** See {@link Layer#clearColor} */\n    public clearColor : ArrayLike<number> = new Float32Array([0, 0, 0, 0]);\n\n    // TODO: handle orphan groups\n    // TODO: handle groups that don't want to be drawn in parent\n    canDrawWithoutLayer = false;\n    canDrawInParentStage = true;\n\n    /** Default zIndex value for layers that are created with this Group */\n    public zIndex: number;\n\n    /** Enabling sorting objects within this group by {@link PIXI.DisplayObject#zOrder zOrder}. */\n    public enableSort: boolean;\n\n    private _activeLayer: Layer = null;\n    private _activeStage: Stage = null;\n    /** @private */\n    _activeChildren: Array<DisplayObject> = [];\n    private _lastUpdateId = -1;\n\n    /**\n     * @param zIndex - The z-index for the entire group.\n     * @param sorting - This will enable sorting by z-order. You can also pass a callback that will assign\n     *  the z-index _before_ sorting. This is useful, for example, when you want to sort by \"y\" - the callback\n     *  can then set the {@link PIXI.DisplayObject#zOrder zOrder} to the y-coordinate. This callback is invoked\n     *  as an event-listener to the {@link Group#sort} event.\n     */\n    constructor(zIndex = 0, sorting: boolean | ((displayObject: DisplayObject) => void) = false)\n    {\n        super();\n\n        this.zIndex = zIndex || 0;\n        this.enableSort = !!sorting;\n\n        if (typeof sorting === 'function')\n        {\n            this.on('sort', sorting);\n        }\n    }\n\n    doSort(layer: Layer, sorted: Array<DisplayObject>): void\n    {\n        if ((this.listeners as any)('sort', true))\n        {\n            for (let i = 0; i < sorted.length; i++)\n            {\n                this.emit('sort', sorted[i]);\n            }\n        }\n\n        sorted.sort(Group.compareZIndex);\n    }\n\n    private static compareZIndex(a: DisplayObject, b: DisplayObject): number\n    {\n        if (a.zOrder < b.zOrder)\n        {\n            return -1;\n        }\n        if (a.zOrder > b.zOrder)\n        {\n            return 1;\n        }\n\n        return a.updateOrder - b.updateOrder;\n    }\n\n    /**\n     * clears temporary variables\n     */\n    private clear(): void\n    {\n        this._activeLayer = null;\n        this._activeStage = null;\n        this._activeChildren.length = 0;\n    }\n\n    /**\n     * Resolve a child {@link PIXI.DisplayObject} that is set to be in this group.\n     *\n     * This is an **internal** method.\n     *\n     * @see Stage#updateStage\n     * @private\n     */\n    _resolveChildDisplayObject(stage: Stage, displayObject: DisplayObject): void\n    {\n        this.check(stage);\n        displayObject._activeParentLayer = this._activeLayer;\n\n        if (this._activeLayer)\n        {\n            this._activeLayer._activeChildren.push(displayObject);\n        }\n        else\n        {\n            this._activeChildren.push(displayObject);\n        }\n    }\n\n    /**\n     * Resolve the layer rendering this group of {@link DisplayObject display objects}.\n     *\n     * This is an **internal** method.\n     *\n     * @see Layer#_onBeginLayerSubtreeTraversal\n     * @private\n     */\n    _resolveLayer(stage: Stage, layer: Layer): void\n    {\n        this.check(stage);\n\n        if (this._activeLayer)\n        {\n            Group.conflict();\n        }\n\n        this._activeLayer = layer;\n        this._activeStage = stage;\n    }\n\n    private check(stage: Stage): void\n    {\n        if (this._lastUpdateId < Group._layerUpdateId)\n        {\n            this._lastUpdateId = Group._layerUpdateId;\n            this.clear();\n            this._activeStage = stage;\n        }\n        else if (this.canDrawInParentStage)\n        {\n            let current = this._activeStage;\n\n            while (current && current !== stage)\n            {\n                current = current._activeParentStage;\n            }\n            this._activeStage = current;\n            if (current === null)\n            {\n                this.clear();\n            }\n        }\n    }\n\n    private static _lastLayerConflict = 0;\n\n    /** Log a conflict that occurs when multiple layers render the same group. */\n    private static conflict(): void\n    {\n        if (Group._lastLayerConflict + 5000 < Date.now())\n        {\n            Group._lastLayerConflict = Date.now();\n            // eslint-disable-next-line max-len,no-console\n            console.log(`@pixi/layers found two layers with the same group in one stage - that's not healthy. Please place a breakpoint here and debug it`);\n        }\n    }\n\n    /**\n     * Fired for each {@link DisplayObject} in this group, right before they are sorted.\n     *\n     * @event sort\n     * @param {PIXI.DisplayObject} object - The object that will be sorted.\n     */\n}\n"],"names":["utils"],"mappings":"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"}